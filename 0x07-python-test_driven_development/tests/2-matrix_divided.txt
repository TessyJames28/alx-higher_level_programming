#Test Driven Development based on 2-matrix_divided.py

#check module is present
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

#check module docstring
>>> m = __import__('2-matrix_divided').__doc__
>>> len(m) > 1
True

#check function docstring
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> len(matrix_divided.__doc__) > 1
True

#check for list of list
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

#check for float
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3.0)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

#check for 0
>>> matrix = [[2, 2], [4, 4]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

check for 1-D list
>>> matrix = [[1, 2, 3, 4], []]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

#check for unequal matrix
>>> matrix = [[1, 2, 3], [4, 5]]
>>> matrix_divided(matrix, 4)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2], [3, 4, 5]]
>>> matrix_divided(matrix, 6)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

#check for tuple data structure
>>> matrix = (1, 2, 3, 4)
>>> matrix_divided(matrix, 7)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

#check for dictionary
>>> matrix = {1: [1, 2, 3, 4]}
>>> matrix_divided(matrix, 5)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

#check for set
>>> matrix = (1, 'a', 2, 'b', 3, 4)
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

#check for None
>>> matrix = ["come", 3]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

#check for string
>>> matrix = ["", ""]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

#string division
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, "aba")
Traceback (most recent call last):
...
TypeError: div must be a number

# empty matrix
>>> matrix_divided([], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


# empty matrix
>>> matrix_divided([[]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
